(3 * as.numeric(Shot.Power)) +
(2 * as.numeric(Sprint.Speed))+
(1 * as.numeric(Attack.Position)),
str_detect(Role, "Midfielder") ~ (5 * as.numeric(Short.Passing)) +
(3 * as.numeric(Dribbling)) +
(4 * as.numeric(Vision)) +
(2 * as.numeric(Long.Passing)) +
(1 * as.numeric(Stamina)),
str_detect(Role, "Defender") ~ (5 * as.numeric(Standing.Tackle)) +
(4 * as.numeric(Interceptions)) +
(3 * as.numeric(Strength)) +
(2 * as.numeric(Defensive.Awareness)) +
(1 * as.numeric(Heading.Accuracy)),
str_detect(Role, "Goalkeeper") ~ (5 * as.numeric(GK.Reflexes)) +
(4 * as.numeric(GK.Diving)) +
(3 * as.numeric(GK.Handling)) +
(2 * as.numeric(GK.Positioning))+
(1 * as.numeric(GK.Positioning)),
TRUE ~ as.numeric(Overall.Score)  # Default if no match
),
mylabel = paste0(Player, " earns €", Wage, "K,", "\n",
"and has a Score of ", Performance_Score, "."))  %>%
filter(Role != "Unknown", !is.na(Wage), !is.na(Performance_Score), !is.na(Contract.Duration)) %>%
select(-c(Position, Player.ID, Loan.End, Attacking.Work.Rate,
Defensive.Work.Rate, Source_File, Joined.Team))
england<-df_clean%>% filter(League== 	"Premier League (England)")
esquisser(df_clean)
df%>%distinct(League)
df%>%distinct(League)
top_leagues <- c("Serie A (Italy)", "La Liga (Spain)", "Premier League (England)",
"Série A (Brazil)", "Bundesliga (Germany)", "Liga Profesional de Fútbol (Argentina)",
"Primeira Liga (Portugal)", "Ligue 1 (France)", "Pro League (Belgium)",
"Eredivisie (Netherlands)", "Süper Lig (Türkiye)", "Categoría Primera A (Colombia)",
"Super League (Greece)", "První liga (Czechia)", "Primera División (Uruguay)")
#Data Manipulation
df_clean<- df %>%  mutate(
Wage  = str_remove_all(Wage, "€"),  # Remove euro symbol (€)
Wage  = str_replace(Wage, "K", ""),
Wage = as.numeric(Wage),
Value  = str_remove_all(Value, "€"),
Value  = str_replace(Value, "K", ""),
Value = as.numeric(Value),
Release.Clause  = str_remove_all(Release.Clause, "€"),
Release.Clause  = str_replace(Release.Clause, "K", ""),
Release.Clause = as.numeric(Release.Clause),
Contract.Start = as.numeric(Contract.Start),
Contract.End = as.numeric(Contract.End),
Contract.Duration=Contract.End-Contract.Start,
Height_cm = as.numeric(str_extract(Height, "\\d+")),
Weight_kg = as.numeric(str_extract(Weight, "\\d+")),
Finishing = as.numeric(str_remove(Finishing, "\\+\\d+")),
Overall.Score = as.numeric(str_remove(Overall.Score, "\\+\\d+")),
Potential.Score = as.numeric(str_remove(Potential.Score, "\\+\\d+")),
Role = case_when(
str_detect(Best.Position, "ST|CF|LW|RW") ~ "Attacker",
str_detect(Best.Position, "CM|CAM|CDM|LM|RM|LWB|RWB") ~ "Midfielder",
str_detect(Best.Position, "CB|LB|RB") ~ "Defender",
str_detect(Best.Position, "GK") ~ "Goalkeeper",
TRUE ~ "Unknown"  # Default if no match
),
Performance_Score= case_when(
str_detect(Role,  "Attacker") ~ (5 * as.numeric(Finishing)) +
(4 * as.numeric(Dribbling)) +
(3 * as.numeric(Shot.Power)) +
(2 * as.numeric(Sprint.Speed))+
(1 * as.numeric(Attack.Position)),
str_detect(Role, "Midfielder") ~ (5 * as.numeric(Short.Passing)) +
(3 * as.numeric(Dribbling)) +
(4 * as.numeric(Vision)) +
(2 * as.numeric(Long.Passing)) +
(1 * as.numeric(Stamina)),
str_detect(Role, "Defender") ~ (5 * as.numeric(Standing.Tackle)) +
(4 * as.numeric(Interceptions)) +
(3 * as.numeric(Strength)) +
(2 * as.numeric(Defensive.Awareness)) +
(1 * as.numeric(Heading.Accuracy)),
str_detect(Role, "Goalkeeper") ~ (5 * as.numeric(GK.Reflexes)) +
(4 * as.numeric(GK.Diving)) +
(3 * as.numeric(GK.Handling)) +
(2 * as.numeric(GK.Positioning))+
(1 * as.numeric(GK.Positioning)),
TRUE ~ as.numeric(Overall.Score)  # Default if no match
),
mylabel = paste0(Player, " earns €", Wage, "K,", "\n",
"and has a Score of ", Performance_Score, "."))  %>%
filter(Role != "Unknown", !is.na(Wage), !is.na(Performance_Score), !is.na(Contract.Duration), (League %in% top_leagues) %>%
select(-c(Position, Player.ID, Loan.End, Attacking.Work.Rate,
Defensive.Work.Rate, Source_File, Joined.Team))
england<-df_clean%>% filter(League== 	"Premier League (England)")
top_leagues <- c("Serie A (Italy)", "La Liga (Spain)", "Premier League (England)",
"Série A (Brazil)", "Bundesliga (Germany)", "Liga Profesional de Fútbol (Argentina)",
"Primeira Liga (Portugal)", "Ligue 1 (France)", "Pro League (Belgium)",
"Eredivisie (Netherlands)", "Süper Lig (Türkiye)", "Categoría Primera A (Colombia)",
"Super League (Greece)", "První liga (Czechia)", "Primera División (Uruguay)")
#Data Manipulation
df_clean<- df %>%  mutate(
Wage  = str_remove_all(Wage, "€"),  # Remove euro symbol (€)
Wage  = str_replace(Wage, "K", ""),
Wage = as.numeric(Wage),
Value  = str_remove_all(Value, "€"),
Value  = str_replace(Value, "K", ""),
Value = as.numeric(Value),
Release.Clause  = str_remove_all(Release.Clause, "€"),
Release.Clause  = str_replace(Release.Clause, "K", ""),
Release.Clause = as.numeric(Release.Clause),
Contract.Start = as.numeric(Contract.Start),
Contract.End = as.numeric(Contract.End),
Contract.Duration=Contract.End-Contract.Start,
Height_cm = as.numeric(str_extract(Height, "\\d+")),
Weight_kg = as.numeric(str_extract(Weight, "\\d+")),
Finishing = as.numeric(str_remove(Finishing, "\\+\\d+")),
Overall.Score = as.numeric(str_remove(Overall.Score, "\\+\\d+")),
Potential.Score = as.numeric(str_remove(Potential.Score, "\\+\\d+")),
Role = case_when(
str_detect(Best.Position, "ST|CF|LW|RW") ~ "Attacker",
str_detect(Best.Position, "CM|CAM|CDM|LM|RM|LWB|RWB") ~ "Midfielder",
str_detect(Best.Position, "CB|LB|RB") ~ "Defender",
str_detect(Best.Position, "GK") ~ "Goalkeeper",
TRUE ~ "Unknown"  # Default if no match
),
Performance_Score= case_when(
str_detect(Role,  "Attacker") ~ (5 * as.numeric(Finishing)) +
(4 * as.numeric(Dribbling)) +
(3 * as.numeric(Shot.Power)) +
(2 * as.numeric(Sprint.Speed))+
(1 * as.numeric(Attack.Position)),
str_detect(Role, "Midfielder") ~ (5 * as.numeric(Short.Passing)) +
(3 * as.numeric(Dribbling)) +
(4 * as.numeric(Vision)) +
(2 * as.numeric(Long.Passing)) +
(1 * as.numeric(Stamina)),
str_detect(Role, "Defender") ~ (5 * as.numeric(Standing.Tackle)) +
(4 * as.numeric(Interceptions)) +
(3 * as.numeric(Strength)) +
(2 * as.numeric(Defensive.Awareness)) +
(1 * as.numeric(Heading.Accuracy)),
str_detect(Role, "Goalkeeper") ~ (5 * as.numeric(GK.Reflexes)) +
(4 * as.numeric(GK.Diving)) +
(3 * as.numeric(GK.Handling)) +
(2 * as.numeric(GK.Positioning))+
(1 * as.numeric(GK.Positioning)),
TRUE ~ as.numeric(Overall.Score)  # Default if no match
),
mylabel = paste0(Player, " earns €", Wage, "K,", "\n",
"and has a Score of ", Performance_Score, "."))  %>%
filter(Role != "Unknown", !is.na(Wage), !is.na(Performance_Score), !is.na(Contract.Duration), (League %in% top_leagues) %>%
select(-c(Position, Player.ID, Loan.End, Attacking.Work.Rate,
Defensive.Work.Rate, Source_File, Joined.Team))
england<-df_clean%>% filter(League== 	"Premier League (England)")
View(df_clean)
top_leagues <- c("Serie A (Italy)", "La Liga (Spain)", "Premier League (England)",
"Série A (Brazil)", "Bundesliga (Germany)", "Liga Profesional de Fútbol (Argentina)",
"Primeira Liga (Portugal)", "Ligue 1 (France)", "Pro League (Belgium)",
"Eredivisie (Netherlands)", "Süper Lig (Türkiye)", "Categoría Primera A (Colombia)",
"Super League (Greece)", "První liga (Czechia)", "Primera División (Uruguay)")
#Data Manipulation
df_clean<- df %>%  mutate(
Wage  = str_remove_all(Wage, "€"),  # Remove euro symbol (€)
Wage  = str_replace(Wage, "K", ""),
Wage = as.numeric(Wage),
Value  = str_remove_all(Value, "€"),
Value  = str_replace(Value, "K", ""),
Value = as.numeric(Value),
Release.Clause  = str_remove_all(Release.Clause, "€"),
Release.Clause  = str_replace(Release.Clause, "K", ""),
Release.Clause = as.numeric(Release.Clause),
Contract.Start = as.numeric(Contract.Start),
Contract.End = as.numeric(Contract.End),
Contract.Duration=Contract.End-Contract.Start,
Height_cm = as.numeric(str_extract(Height, "\\d+")),
Weight_kg = as.numeric(str_extract(Weight, "\\d+")),
Finishing = as.numeric(str_remove(Finishing, "\\+\\d+")),
Overall.Score = as.numeric(str_remove(Overall.Score, "\\+\\d+")),
Potential.Score = as.numeric(str_remove(Potential.Score, "\\+\\d+")),
Role = case_when(
str_detect(Best.Position, "ST|CF|LW|RW") ~ "Attacker",
str_detect(Best.Position, "CM|CAM|CDM|LM|RM|LWB|RWB") ~ "Midfielder",
str_detect(Best.Position, "CB|LB|RB") ~ "Defender",
str_detect(Best.Position, "GK") ~ "Goalkeeper",
TRUE ~ "Unknown"  # Default if no match
),
Performance_Score= case_when(
str_detect(Role,  "Attacker") ~ (5 * as.numeric(Finishing)) +
(4 * as.numeric(Dribbling)) +
(3 * as.numeric(Shot.Power)) +
(2 * as.numeric(Sprint.Speed))+
(1 * as.numeric(Attack.Position)),
str_detect(Role, "Midfielder") ~ (5 * as.numeric(Short.Passing)) +
(3 * as.numeric(Dribbling)) +
(4 * as.numeric(Vision)) +
(2 * as.numeric(Long.Passing)) +
(1 * as.numeric(Stamina)),
str_detect(Role, "Defender") ~ (5 * as.numeric(Standing.Tackle)) +
(4 * as.numeric(Interceptions)) +
(3 * as.numeric(Strength)) +
(2 * as.numeric(Defensive.Awareness)) +
(1 * as.numeric(Heading.Accuracy)),
str_detect(Role, "Goalkeeper") ~ (5 * as.numeric(GK.Reflexes)) +
(4 * as.numeric(GK.Diving)) +
(3 * as.numeric(GK.Handling)) +
(2 * as.numeric(GK.Positioning))+
(1 * as.numeric(GK.Positioning)),
TRUE ~ as.numeric(Overall.Score)  # Default if no match
),
mylabel = paste0(Player, " earns €", Wage, "K,", "\n",
"and has a Score of ", Performance_Score, "."))  %>%
filter(Role != "Unknown", !is.na(Wage), !is.na(Performance_Score), !is.na(Contract.Duration), (League %in% top_leagues) %>%
select(-c(Position, Player.ID, Loan.End, Attacking.Work.Rate,
Defensive.Work.Rate, Source_File, Joined.Team))
#england<-df_clean%>% filter(League== 	"Premier League (England)")
top_leagues <- c("Serie A (Italy)", "La Liga (Spain)", "Premier League (England)",
"Série A (Brazil)", "Bundesliga (Germany)", "Liga Profesional de Fútbol (Argentina)",
"Primeira Liga (Portugal)", "Ligue 1 (France)", "Pro League (Belgium)",
"Eredivisie (Netherlands)", "Süper Lig (Türkiye)", "Categoría Primera A (Colombia)",
"Super League (Greece)", "První liga (Czechia)", "Primera División (Uruguay)")
#Data Manipulation
df_clean<- df %>%  mutate(
Wage  = str_remove_all(Wage, "€"),  # Remove euro symbol (€)
Wage  = str_replace(Wage, "K", ""),
Wage = as.numeric(Wage),
Value  = str_remove_all(Value, "€"),
Value  = str_replace(Value, "K", ""),
Value = as.numeric(Value),
Release.Clause  = str_remove_all(Release.Clause, "€"),
Release.Clause  = str_replace(Release.Clause, "K", ""),
Release.Clause = as.numeric(Release.Clause),
Contract.Start = as.numeric(Contract.Start),
Contract.End = as.numeric(Contract.End),
Contract.Duration=Contract.End-Contract.Start,
Height_cm = as.numeric(str_extract(Height, "\\d+")),
Weight_kg = as.numeric(str_extract(Weight, "\\d+")),
Finishing = as.numeric(str_remove(Finishing, "\\+\\d+")),
Overall.Score = as.numeric(str_remove(Overall.Score, "\\+\\d+")),
Potential.Score = as.numeric(str_remove(Potential.Score, "\\+\\d+")),
Role = case_when(
str_detect(Best.Position, "ST|CF|LW|RW") ~ "Attacker",
str_detect(Best.Position, "CM|CAM|CDM|LM|RM|LWB|RWB") ~ "Midfielder",
str_detect(Best.Position, "CB|LB|RB") ~ "Defender",
str_detect(Best.Position, "GK") ~ "Goalkeeper",
TRUE ~ "Unknown"  # Default if no match
),
Performance_Score= case_when(
str_detect(Role,  "Attacker") ~ (5 * as.numeric(Finishing)) +
(4 * as.numeric(Dribbling)) +
(3 * as.numeric(Shot.Power)) +
(2 * as.numeric(Sprint.Speed))+
(1 * as.numeric(Attack.Position)),
str_detect(Role, "Midfielder") ~ (5 * as.numeric(Short.Passing)) +
(3 * as.numeric(Dribbling)) +
(4 * as.numeric(Vision)) +
(2 * as.numeric(Long.Passing)) +
(1 * as.numeric(Stamina)),
str_detect(Role, "Defender") ~ (5 * as.numeric(Standing.Tackle)) +
(4 * as.numeric(Interceptions)) +
(3 * as.numeric(Strength)) +
(2 * as.numeric(Defensive.Awareness)) +
(1 * as.numeric(Heading.Accuracy)),
str_detect(Role, "Goalkeeper") ~ (5 * as.numeric(GK.Reflexes)) +
(4 * as.numeric(GK.Diving)) +
(3 * as.numeric(GK.Handling)) +
(2 * as.numeric(GK.Positioning))+
(1 * as.numeric(GK.Positioning)),
TRUE ~ as.numeric(Overall.Score)  # Default if no match
),
mylabel = paste0(Player, " earns €", Wage, "K,", "\n",
"and has a Score of ", Performance_Score, "."))  %>%
filter(Role != "Unknown", !is.na(Wage), !is.na(Performance_Score), !is.na(Contract.Duration), League %in% top_leagues) %>%
select(-c(Position, Player.ID, Loan.End, Attacking.Work.Rate,
Defensive.Work.Rate, Source_File, Joined.Team))
england<-df_clean%>% filter(League== 	"Premier League (England)")
esquisser(df_clean)
top_leagues <- c("Serie A (Italy)", "La Liga (Spain)", "Premier League (England)",
"Série A (Brazil)", "Bundesliga (Germany)", "Liga Profesional de Fútbol (Argentina)",
"Primeira Liga (Portugal)", "Ligue 1 (France)", "Pro League (Belgium)",
"Eredivisie (Netherlands)", "Süper Lig (Türkiye)")
#Data Manipulation
df_clean<- df %>%  mutate(
Wage  = str_remove_all(Wage, "€"),  # Remove euro symbol (€)
Wage  = str_replace(Wage, "K", ""),
Wage = as.numeric(Wage),
Value  = str_remove_all(Value, "€"),
Value  = str_replace(Value, "K", ""),
Value = as.numeric(Value),
Release.Clause  = str_remove_all(Release.Clause, "€"),
Release.Clause  = str_replace(Release.Clause, "K", ""),
Release.Clause = as.numeric(Release.Clause),
Contract.Start = as.numeric(Contract.Start),
Contract.End = as.numeric(Contract.End),
Contract.Duration=Contract.End-Contract.Start,
Height_cm = as.numeric(str_extract(Height, "\\d+")),
Weight_kg = as.numeric(str_extract(Weight, "\\d+")),
Finishing = as.numeric(str_remove(Finishing, "\\+\\d+")),
Overall.Score = as.numeric(str_remove(Overall.Score, "\\+\\d+")),
Potential.Score = as.numeric(str_remove(Potential.Score, "\\+\\d+")),
Role = case_when(
str_detect(Best.Position, "ST|CF|LW|RW") ~ "Attacker",
str_detect(Best.Position, "CM|CAM|CDM|LM|RM|LWB|RWB") ~ "Midfielder",
str_detect(Best.Position, "CB|LB|RB") ~ "Defender",
str_detect(Best.Position, "GK") ~ "Goalkeeper",
TRUE ~ "Unknown"  # Default if no match
),
Performance_Score= case_when(
str_detect(Role,  "Attacker") ~ (5 * as.numeric(Finishing)) +
(4 * as.numeric(Dribbling)) +
(3 * as.numeric(Shot.Power)) +
(2 * as.numeric(Sprint.Speed))+
(1 * as.numeric(Attack.Position)),
str_detect(Role, "Midfielder") ~ (5 * as.numeric(Short.Passing)) +
(3 * as.numeric(Dribbling)) +
(4 * as.numeric(Vision)) +
(2 * as.numeric(Long.Passing)) +
(1 * as.numeric(Stamina)),
str_detect(Role, "Defender") ~ (5 * as.numeric(Standing.Tackle)) +
(4 * as.numeric(Interceptions)) +
(3 * as.numeric(Strength)) +
(2 * as.numeric(Defensive.Awareness)) +
(1 * as.numeric(Heading.Accuracy)),
str_detect(Role, "Goalkeeper") ~ (5 * as.numeric(GK.Reflexes)) +
(4 * as.numeric(GK.Diving)) +
(3 * as.numeric(GK.Handling)) +
(2 * as.numeric(GK.Positioning))+
(1 * as.numeric(GK.Positioning)),
TRUE ~ as.numeric(Overall.Score)  # Default if no match
),
mylabel = paste0(Player, " earns €", Wage, "K,", "\n",
"and has a Score of ", Performance_Score, "."))  %>%
filter(Role != "Unknown", !is.na(Wage), !is.na(Performance_Score), !is.na(Contract.Duration), League %in% top_leagues) %>%
select(-c(Position, Player.ID, Loan.End, Attacking.Work.Rate,
Defensive.Work.Rate, Source_File, Joined.Team))
england<-df_clean%>% filter(League== 	"Premier League (England)")
esquisser(df_clean)
df_clean<- df %>%  mutate(
Wage  = str_remove_all(Wage, "€"),
Wage  = str_replace(Wage, "K", ""),
Wage = as.numeric(Wage),
Value  = str_remove_all(Value, "€"),
Value  = str_replace(Value, "K", ""),
Value = as.numeric(Value),
Release.Clause  = str_remove_all(Release.Clause, "€"),
Release.Clause  = str_replace(Release.Clause, "K", ""),
Release.Clause = as.numeric(Release.Clause),
Contract.Start = as.numeric(Contract.Start),
Contract.End = as.numeric(Contract.End),
Contract.Duration=Contract.End-Contract.Start,
Height_cm = as.numeric(str_extract(Height, "\\d+")),
Weight_kg = as.numeric(str_extract(Weight, "\\d+")),
Finishing = as.numeric(str_remove(Finishing, "\\+\\d+")),
Overall.Score = as.numeric(str_remove(Overall.Score, "\\+\\d+")),
Potential.Score = as.numeric(str_remove(Potential.Score, "\\+\\d+")),
Role = case_when(
str_detect(Best.Position, "ST|CF|LW|RW") ~ "Attacker",
str_detect(Best.Position, "CM|CAM|CDM|LM|RM|LWB|RWB") ~ "Midfielder",
str_detect(Best.Position, "CB|LB|RB") ~ "Defender",
str_detect(Best.Position, "GK") ~ "Goalkeeper",
TRUE ~ "Unknown"
),
Performance_Score= case_when(
str_detect(Role,  "Attacker") ~ (5 * as.numeric(Finishing)) +
(4 * as.numeric(Dribbling)) +
(3 * as.numeric(Shot.Power)) +
(2 * as.numeric(Sprint.Speed))+
(1 * as.numeric(Attack.Position)),
str_detect(Role, "Midfielder") ~ (5 * as.numeric(Short.Passing)) +
(3 * as.numeric(Dribbling)) +
(4 * as.numeric(Vision)) +
(2 * as.numeric(Long.Passing)) +
(1 * as.numeric(Stamina)),
str_detect(Role, "Defender") ~ (5 * as.numeric(Standing.Tackle)) +
(4 * as.numeric(Interceptions)) +
(3 * as.numeric(Strength)) +
(2 * as.numeric(Defensive.Awareness)) +
(1 * as.numeric(Heading.Accuracy)),
str_detect(Role, "Goalkeeper") ~ (5 * as.numeric(GK.Reflexes)) +
(4 * as.numeric(GK.Diving)) +
(3 * as.numeric(GK.Handling)) +
(2 * as.numeric(GK.Positioning))+
(1 * as.numeric(GK.Positioning)),
TRUE ~ as.numeric(Overall.Score)  # Default if no match
),
mylabel = paste0(Player, " earns €", Wage, "K,", "\n",
"and has a Score of ", Performance_Score, "."))  %>%
filter(Role != "Unknown", !is.na(Wage), !is.na(Performance_Score), !is.na(Contract.Duration), League %in% top_leagues) %>%
select(-c(Position, Player.ID, Loan.End, Attacking.Work.Rate,
Defensive.Work.Rate, Source_File, Joined.Team))
england<-df_clean%>% filter(League== 	"Premier League (England)")
ggplot(df_clean) +
aes(x = Overall.Score) +
geom_density(fill = "#112446") +
hrbrthemes::theme_ipsum_ps() +
theme(legend.text = element_text(size = 12L), legend.title = element_text(size = 14L)) +
facet_wrap(vars(League),
nrow = 5L)
ggplot(df_clean) +
aes(x = Overall.Score, y = Potential.Score) +
geom_jitter() +
hrbrthemes::theme_ipsum_ps() +
theme(legend.text = element_text(size = 12L), legend.title = element_text(size = 14L)) +
facet_wrap(vars(League),
nrow = 5L)
ggplot(df_clean) +
aes(x = Overall.Score, y = Contract.Duration) +
geom_jitter() +
hrbrthemes::theme_ipsum_ps() +
theme(legend.text = element_text(size = 12L), legend.title = element_text(size = 14L)) +
facet_wrap(vars(League),
nrow = 5L)
ggplot(df_clean) +
aes(x = League) +
geom_bar(fill = "#112446") +
coord_flip() +
hrbrthemes::theme_ipsum_ps() +
theme(plot.caption = element_text(size = 15L), axis.title.y = element_text(size = 15L), axis.title.x = element_text(size = 15L),
axis.text.y = element_text(face = "bold", size = 14L), axis.text.x = element_text(size = 12L),
legend.text = element_text(face = "bold", size = 14L), legend.title = element_text(face = "bold",
size = 16L))
ggplot(df_clean) +
aes(x = Age, y = League) +
geom_boxplot(fill = "#112446") +
hrbrthemes::theme_ipsum_ps() +
theme(plot.caption = element_text(size = 15L), axis.title.y = element_text(size = 15L), axis.title.x = element_text(size = 15L),
axis.text.y = element_text(face = "bold", size = 14L), axis.text.x = element_text(size = 12L),
legend.text = element_text(face = "bold", size = 14L), legend.title = element_text(face = "bold",
size = 16L))
ggplot(df_clean) +
aes(x = Age, y = Role) +
geom_boxplot(fill = "#112446") +
hrbrthemes::theme_ipsum_ps() +
theme(plot.caption = element_text(size = 15L), axis.title.y = element_text(size = 15L), axis.title.x = element_text(size = 15L),
axis.text.y = element_text(face = "bold", size = 14L), axis.text.x = element_text(size = 12L),
legend.text = element_text(face = "bold", size = 14L), legend.title = element_text(face = "bold",
size = 16L))
ggplot(df_clean) +
aes(x = Age, y = League) +
geom_boxplot(fill = "#112446") +
hrbrthemes::theme_ipsum_ps() +
theme(plot.caption = element_text(size = 15L), axis.title.y = element_text(size = 15L), axis.title.x = element_text(size = 15L),
axis.text.y = element_text(face = "bold", size = 14L), axis.text.x = element_text(size = 12L),
legend.text = element_text(face = "bold", size = 14L), legend.title = element_text(face = "bold",
size = 16L)) +
facet_wrap(vars(Role), nrow = 1L)
ggplot(df_clean) +
aes(x = Age, y = Growth) +
geom_jitter() +
hrbrthemes::theme_ipsum_ps() +
theme(plot.caption = element_text(size = 15L),
axis.title.y = element_text(size = 15L), axis.title.x = element_text(size = 15L), axis.text.y = element_text(face = "bold",
size = 14L), axis.text.x = element_text(size = 12L), legend.text = element_text(face = "bold",
size = 14L), legend.title = element_text(face = "bold", size = 16L))
)
ggplot(df_clean) +
aes(x = Overall.Score) +
geom_density(fill = "#112446") +
hrbrthemes::theme_ipsum_ps() +
theme(legend.text = element_text(size = 12L), legend.title = element_text(size = 14L)) +
facet_wrap(vars(League),
nrow = 5L)
ggplot(df_clean) +
aes(x = Overall.Score, y = Potential.Score) +
geom_jitter() +
hrbrthemes::theme_ipsum_ps() +
theme(legend.text = element_text(size = 12L), legend.title = element_text(size = 14L)) +
facet_wrap(vars(League),
nrow = 5L)
ggplot(df_clean) +
aes(x = Overall.Score, y = Contract.Duration) +
geom_jitter() +
hrbrthemes::theme_ipsum_ps() +
theme(legend.text = element_text(size = 12L), legend.title = element_text(size = 14L)) +
facet_wrap(vars(League),
nrow = 5L)
ggplot(df_clean) +
aes(x = League) +
geom_bar(fill = "#112446") +
coord_flip() +
hrbrthemes::theme_ipsum_ps() +
theme(plot.caption = element_text(size = 15L), axis.title.y = element_text(size = 15L), axis.title.x = element_text(size = 15L),
axis.text.y = element_text(face = "bold", size = 14L), axis.text.x = element_text(size = 12L),
legend.text = element_text(face = "bold", size = 14L), legend.title = element_text(face = "bold",
size = 16L))
ggplot(df_clean) +
aes(x = Age, y = League) +
geom_boxplot(fill = "#112446") +
hrbrthemes::theme_ipsum_ps() +
theme(plot.caption = element_text(size = 15L), axis.title.y = element_text(size = 15L), axis.title.x = element_text(size = 15L),
axis.text.y = element_text(face = "bold", size = 14L), axis.text.x = element_text(size = 12L),
legend.text = element_text(face = "bold", size = 14L), legend.title = element_text(face = "bold",
size = 16L))
ggplot(df_clean) +
aes(x = Age, y = Role) +
geom_boxplot(fill = "#112446") +
hrbrthemes::theme_ipsum_ps() +
theme(plot.caption = element_text(size = 15L), axis.title.y = element_text(size = 15L), axis.title.x = element_text(size = 15L),
axis.text.y = element_text(face = "bold", size = 14L), axis.text.x = element_text(size = 12L),
legend.text = element_text(face = "bold", size = 14L), legend.title = element_text(face = "bold",
size = 16L))
ggplot(df_clean) +
aes(x = Age, y = League) +
geom_boxplot(fill = "#112446") +
hrbrthemes::theme_ipsum_ps() +
theme(plot.caption = element_text(size = 15L), axis.title.y = element_text(size = 15L), axis.title.x = element_text(size = 15L),
axis.text.y = element_text(face = "bold", size = 14L), axis.text.x = element_text(size = 12L),
legend.text = element_text(face = "bold", size = 14L), legend.title = element_text(face = "bold",
size = 16L)) +
facet_wrap(vars(Role), nrow = 1L)
ggplot(df_clean) +
aes(x = Age, y = Growth) +
geom_jitter() +
hrbrthemes::theme_ipsum_ps() +
theme(plot.caption = element_text(size = 15L),
axis.title.y = element_text(size = 15L), axis.title.x = element_text(size = 15L), axis.text.y = element_text(face = "bold",
size = 14L), axis.text.x = element_text(size = 12L), legend.text = element_text(face = "bold",
size = 14L), legend.title = element_text(face = "bold", size = 16L))
